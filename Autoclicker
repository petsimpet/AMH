-- Services
local VirtualInputManager = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local Player = Players.LocalPlayer

-- Variablen
local Enabled = false
local AutoClicking = false
local X, Y = 0, 0

-- GUI
local ScreenGui = Instance.new("ScreenGui", Player.PlayerGui)

-- Kreis Eigenschaften
local Circle = Instance.new("Frame")
Circle.Size = UDim2.new(0, 100, 0, 100) -- Kreisgröße
Circle.Position = UDim2.new(0.5, -50, 0.5, -50) -- Mitte des Bildschirms
Circle.BackgroundColor3 = Color3.new(1, 0, 0) -- Farbe des Kreises (Rot)
Circle.BorderSizePixel = 0
Circle.AnchorPoint = Vector2.new(0.5, 0.5) -- Zentrum des Kreises
Circle.Parent = ScreenGui

-- Damit der Kreis rund ist, die Ecken abrunden
Circle.ClipsDescendants = true -- sicherstellen, dass alles, was über den Kreis hinausgeht, abgeschnitten wird
Circle.BackgroundTransparency = 0 -- nicht transparent
Circle.SizeConstraint = Enum.SizeConstraint.RelativeXX -- Verhältnis beibehalten

-- Mach den Kreis draggable
local dragging = false
local dragInput, mousePos, framePos

local function updateCirclePosition(input)
    local delta = input.Position - mousePos
    Circle.Position = UDim2.new(framePos.X.Scale, framePos.X.Offset + delta.X, framePos.Y.Scale, framePos.Y.Offset + delta.Y)
end

Circle.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        mousePos = input.Position
        framePos = Circle.Position

        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch) then
        updateCirclePosition(input)
    end
end)

-- Start/Stop Button
local StartStopButton = Instance.new("TextButton")
StartStopButton.Size = UDim2.new(0, 200, 0, 50)
StartStopButton.Position = UDim2.new(0.5, -100, 0.8, 0)
StartStopButton.Text = "Start AutoClicker"
StartStopButton.BackgroundColor3 = Color3.new(0, 1, 0)
StartStopButton.Parent = ScreenGui

-- Start/Stop Button Funktionalität
StartStopButton.MouseButton1Click:Connect(function()
    AutoClicking = not AutoClicking
    if AutoClicking then
        StartStopButton.Text = "Stop AutoClicker"
        StartStopButton.BackgroundColor3 = Color3.new(1, 0, 0)
        Enabled = true
    else
        StartStopButton.Text = "Start AutoClicker"
        StartStopButton.BackgroundColor3 = Color3.new(0, 1, 0)
        Enabled = false
    end
end)

-- Autoclicker Logik
spawn(function()
    while true do
        if Enabled then
            -- Update X and Y to the Circle's center position
            local absPos = Circle.AbsolutePosition
            X = absPos.X + (Circle.AbsoluteSize.X / 2)
            Y = absPos.Y + (Circle.AbsoluteSize.Y / 2)

            -- Simuliere einen Mausklick an der Position des Kreises
            VirtualInputManager:SendMouseButtonEvent(X, Y, 0, true, game, 1)
            VirtualInputManager:SendMouseButtonEvent(X, Y, 0, false, game, 1)
            wait(0.1)
        end
        wait()
    end
end)

-- Setze die Ecken des Kreises abgerundet
Circle.UICorner = Instance.new("UICorner", Circle)
Circle.UICorner.CornerRadius = UDim.new(0.5, 0) -- Macht den Kreis rund
